@startuml
!if TOTO
!define TOTO
class Bot {
   +name:String,
   +deactivated:bool,
   +owner:User,
   +joined_channels:List<JoinedChannel>,
   +extensions:List<Extension>,
}

class UserSubscription {
  + owner : User,
  + subscription : Subscription;
}

class Subscription {
  + subscriptionId : String,
  + type : String,
  + condition : String
}

class Extension {
  + name:String,
  + activated:boolean,
  + available:boolean,
}

class BotExtension {
  + bot:Bot,
  + extension:Extension,
  + enabled:boolean,
}

class JoinedChannel {
  + viewerIdentity: ViewerIdentity,
  + bot:Bot
  + channelName:String,
}

class Role {
 +role:RoleKind
 +allowed_operations:Set<Operation>
}

class Safe #C8FF8D {
 +channelName:String,
 +viewerIdentity:ViewerIdentity,
 +amount:int
 +pointType:PointType,
}

class ViewerIdentity {
    platform:Platform,
    viewerId:String,
    pseudo:String
}

class Client {
    platform:Platform,
    clientId:String,
    clientSecret:String
}

class ClientToken #7591FF {
     client:Client
}

class UserToken #7591FF {
    owner:User
    viewerIdentity:ViewerIdentity,
    refreshToken:String,
    scopes:String
}

abstract class Token #FF6259 {
    accessToken:String,
    duration:long,
    expirationDate:Instant,
}

class Transaction #C8FF8D {
  +safe:Safe
  +state:TransactionState
  +expirationDate:Instant
  +amount:int
}

class User {
+ deactivated:boolean,
+jwt_claim:String,
+locale:String,
+login:String,
+password:String,
}

class Overlay {
+name:String
+urlId:String
+width:int
+height:int
+widgetGeometries:List<WidgetGeometry>
}

class WidgetGeometry {
+widgetName:string
+x:int
+y:int
+width:int
+height:int
}




@enduml
